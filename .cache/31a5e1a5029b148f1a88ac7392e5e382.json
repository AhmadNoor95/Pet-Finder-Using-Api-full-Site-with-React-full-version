{"id":"customInputHooks.js","dependencies":[{"name":"/Users/ahmadnoor/Downloads/app/pet_Finder_App/package.json","includedInParent":true,"mtime":1552550959319},{"name":"/Users/ahmadnoor/Downloads/app/pet_Finder_App/.babelrc","includedInParent":true,"mtime":1552885187597},{"name":"react","loc":{"line":1,"column":26},"parent":"/Users/ahmadnoor/Downloads/app/pet_Finder_App/src/customInputHooks.js","resolved":"/Users/ahmadnoor/Downloads/app/pet_Finder_App/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.useInput = useInput;\n\nvar _react = require(\"react\");\n\nfunction useInput(initial) {\n    var _useState = (0, _react.useState)(initial),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n    function handleInputChange(e) {\n        setValue(e.target.value);\n    }\n    return {\n        value: value,\n        onChange: handleInputChange\n    };\n}","map":{"mappings":[{"name":"useInput","generated":{"line":9,"column":8},"source":"customInputHooks.js","original":{"line":2,"column":16}},{"name":"useInput","generated":{"line":9,"column":19},"source":"customInputHooks.js","original":{"line":2,"column":16}},{"generated":{"line":11,"column":0},"source":"customInputHooks.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"customInputHooks.js","original":{"line":2,"column":7}},{"name":"useInput","generated":{"line":13,"column":9},"source":"customInputHooks.js","original":{"line":2,"column":16}},{"generated":{"line":13,"column":17},"source":"customInputHooks.js","original":{"line":2,"column":7}},{"name":"initial","generated":{"line":13,"column":18},"source":"customInputHooks.js","original":{"line":2,"column":25}},{"generated":{"line":13,"column":25},"source":"customInputHooks.js","original":{"line":2,"column":7}},{"generated":{"line":13,"column":27},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":14,"column":0},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":14,"column":20},"source":"customInputHooks.js","original":{"line":3,"column":31}},{"name":"initial","generated":{"line":14,"column":41},"source":"customInputHooks.js","original":{"line":3,"column":40}},{"generated":{"line":14,"column":48},"source":"customInputHooks.js","original":{"line":3,"column":31}},{"generated":{"line":14,"column":49},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":15,"column":0},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":16,"column":0},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"name":"value","generated":{"line":16,"column":8},"source":"customInputHooks.js","original":{"line":3,"column":12}},{"generated":{"line":16,"column":13},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":17,"column":0},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"name":"setValue","generated":{"line":17,"column":8},"source":"customInputHooks.js","original":{"line":3,"column":19}},{"generated":{"line":17,"column":16},"source":"customInputHooks.js","original":{"line":2,"column":33}},{"generated":{"line":19,"column":0},"source":"customInputHooks.js","original":{"line":4,"column":5}},{"name":"handleInputChange","generated":{"line":19,"column":13},"source":"customInputHooks.js","original":{"line":4,"column":14}},{"generated":{"line":19,"column":30},"source":"customInputHooks.js","original":{"line":4,"column":5}},{"name":"e","generated":{"line":19,"column":31},"source":"customInputHooks.js","original":{"line":4,"column":32}},{"generated":{"line":19,"column":32},"source":"customInputHooks.js","original":{"line":4,"column":5}},{"generated":{"line":19,"column":34},"source":"customInputHooks.js","original":{"line":4,"column":34}},{"name":"setValue","generated":{"line":20,"column":0},"source":"customInputHooks.js","original":{"line":5,"column":9}},{"name":"e","generated":{"line":20,"column":17},"source":"customInputHooks.js","original":{"line":5,"column":18}},{"name":"target","generated":{"line":20,"column":19},"source":"customInputHooks.js","original":{"line":5,"column":20}},{"generated":{"line":20,"column":25},"source":"customInputHooks.js","original":{"line":5,"column":18}},{"name":"value","generated":{"line":20,"column":26},"source":"customInputHooks.js","original":{"line":5,"column":27}},{"generated":{"line":20,"column":31},"source":"customInputHooks.js","original":{"line":5,"column":9}},{"generated":{"line":21,"column":0},"source":"customInputHooks.js","original":{"line":6,"column":6}},{"generated":{"line":22,"column":0},"source":"customInputHooks.js","original":{"line":7,"column":5}},{"generated":{"line":22,"column":11},"source":"customInputHooks.js","original":{"line":7,"column":12}},{"name":"value","generated":{"line":23,"column":0},"source":"customInputHooks.js","original":{"line":8,"column":9}},{"generated":{"line":23,"column":20},"source":"customInputHooks.js","original":{"line":7,"column":12}},{"name":"onChange","generated":{"line":24,"column":0},"source":"customInputHooks.js","original":{"line":9,"column":9}},{"name":"handleInputChange","generated":{"line":24,"column":18},"source":"customInputHooks.js","original":{"line":9,"column":18}},{"generated":{"line":25,"column":0},"source":"customInputHooks.js","original":{"line":7,"column":12}},{"generated":{"line":25,"column":5},"source":"customInputHooks.js","original":{"line":7,"column":5}},{"generated":{"line":26,"column":0},"source":"customInputHooks.js","original":{"line":11,"column":1}}],"sources":{"customInputHooks.js":"import  { useState } from \"react\"\nexport function useInput(initial){\n     const [value, setValue] = useState(initial)\n     function handleInputChange(e){\n         setValue(e.target.value)\n     }\n     return {\n         value,\n         onChange:handleInputChange\n     }\n}"},"lineCount":null}},"hash":"9222c3820422466efa4657e94a2aad2e","cacheData":{"env":{}}}